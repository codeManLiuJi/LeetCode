public boolean isMatch(String s, String p){
		if(p.isEmpty()) return  s.isEmpty();
		boolean first_match = (!s.isEmpty() && 
			(p.charAt(0) == s.charAt(0) || p.charAt(0) == '.'));	//先匹配第一个字符
		if(p.length() > 1 && p.charAt(1) == '*') {
			return (isMatch(s,p.substring(2)) ||	
					(first_match && isMatch(s.substring(1), p)));	//出现*号时，可能匹配0或者多个
		}else {
			return 	first_match && isMatch(s.substring(1), p.substring(1));	//未出现*号，直接挨个匹配
		}
    }

――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

public boolean isMatch(String text, String pattern){
        boolean[][] dp = new boolean[text.length() + 1][pattern.length() + 1];	
        dp[text.length()][pattern.length()] = true;		//dp[i][j] 的值保存了text从i开始 同 pattern从j开始匹配的结果
        
        for (int i = text.length(); i >= 0; i--){
            for (int j = pattern.length() - 1; j >= 0; j--){
//            	System.out.println(pattern.charAt(j));
                boolean first_match = (i < text.length() && 
                                       (pattern.charAt(j) == text.charAt(i) ||
                                        pattern.charAt(j) == '.'));
                
                if (j + 1 < pattern.length() && pattern.charAt(j+1) == '*'){	//当有*号时，匹配0或多个
                    dp[i][j] = dp[i][j+2] || first_match && dp[i+1][j];
//                    System.out.println("if   "+i+":"+j+dp[i][j]);
                } else {
                    dp[i][j] = first_match && dp[i+1][j+1];		//当没有*号出现时，单个匹配
//                    System.out.println("else  "+i+":"+j+dp[i][j]);
                }
                
            }
        }
        return dp[0][0];
    }
